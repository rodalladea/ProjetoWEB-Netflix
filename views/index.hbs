<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Netflix Brazil - Watch TV Shows Online, Watch Movies Online</title>

    <link rel="shortcut icon" type="image/x-icon" href="favicon.png" />
    <link rel="stylesheet" type="text/css" href="css/style.css">
</head>

<body>
    <div class="header">
        <a href="#" class="svg-a">
            <svg viewBox="0 0 111 30" class="svg-box-logo">
                <g>
                    <path
                        d="M105.062 14.28L111 30c-1.75-.25-3.499-.563-5.28-.845l-3.345-8.686-3.437 7.969c-1.687-.282-3.344-.376-5.031-.595l6.031-13.75L94.468 0h5.063l3.062 7.874L105.875 0h5.124l-5.937 14.28zM90.47 0h-4.594v27.25c1.5.094 3.062.156 4.594.343V0zm-8.563 26.937c-4.187-.281-8.375-.53-12.656-.625V0h4.687v21.875c2.688.062 5.375.28 7.969.405v4.657zM64.25 10.657v4.687h-6.406V26H53.22V0h13.125v4.687h-8.5v5.97h6.406zm-18.906-5.97V26.25c-1.563 0-3.156 0-4.688.062V4.687h-4.844V0h14.406v4.687h-4.874zM30.75 15.593c-2.062 0-4.5 0-6.25.095v6.968c2.75-.188 5.5-.406 8.281-.5v4.5l-12.968 1.032V0H32.78v4.687H24.5V11c1.813 0 4.594-.094 6.25-.094v4.688zM4.78 12.968v16.375C3.094 29.531 1.593 29.75 0 30V0h4.469l6.093 17.032V0h4.688v28.062c-1.656.282-3.344.376-5.125.625L4.78 12.968z">
                    </path>
                </g>
            </svg>
        </a>
        <a href='./login' class="sign-in">Sign In</a>
        <a href='./cadastro' class="sign-in">Sign Up</a>
        <a href='./configuracao' class="sign-in">config</a>

    </div>


    <div class="home-wrapper">
        <div class="concord">
            <div class="bg">
                <div class="image">
                    <img class="concord-img"
                        src="https://assets.nflxext.com/ffe/siteui/vlv3/036ef61f-648d-4ded-a3a7-c5d58be63f37/47a92410-1ea5-412d-a943-52f7bd7e6b34/BR-en-20190401-popsignuptwoweeks-perspective_alpha_website_small.jpg"
                        srcset="https://assets.nflxext.com/ffe/siteui/vlv3/036ef61f-648d-4ded-a3a7-c5d58be63f37/47a92410-1ea5-412d-a943-52f7bd7e6b34/BR-en-20190401-popsignuptwoweeks-perspective_alpha_website_small.jpg 1000w, https://assets.nflxext.com/ffe/siteui/vlv3/036ef61f-648d-4ded-a3a7-c5d58be63f37/47a92410-1ea5-412d-a943-52f7bd7e6b34/BR-en-20190401-popsignuptwoweeks-perspective_alpha_website_medium.jpg 1500w, https://assets.nflxext.com/ffe/siteui/vlv3/036ef61f-648d-4ded-a3a7-c5d58be63f37/47a92410-1ea5-412d-a943-52f7bd7e6b34/BR-en-20190401-popsignuptwoweeks-perspective_alpha_website_large.jpg 1800w"
                        alt="">
                    <div class="gradiente"></div>
                </div>
            </div>

            <div class="conteudo-wrapper">
                <div class="texto">
                    <h1>See what's next.</h1>
                    <p>Watch anywhere. Cancel anytime.</p>
                </div>
                <button>
                    <span>Watch free for 30 days</span>
                    <span class="text-maior"></span>
                </button>
            </div>
        </div>

        <div class="fundo">

            <form class="pesquisa" id="form-pesquisa" action="/busca" method="GET">
                <label for="busca">Pesquisar: </label>
                <input id="busca" type="text" name="busca" value="" list="lista_pesquisa" />

                <label for="filtro">Filtro: </label>
                <select id="selector" name="filtro">
                    <option value="nome" selected>Nome</option>
                    <option value="ano">Ano</option>
                    <option value="sinopse">Sinopse</option>
                </select>

                <input id="btnBuscar" type="submit" name="envia" value="Buscar">
                <datalist id="lista_pesquisa"></datalist>
            </form>

            <div id="cards" class="all-card">
                {{#each filmes}}
                <div class="card">
                    <img src={{img}} class="img-card">
                    <div class="conteudo-card">
                        <label class="campo-card" for="nome">Nome</label>
                        <p class="p-card">{{nome}}</p>
                    </div>
                    <div class="conteudo-card">
                        <label class="campo-card" for="ano">Ano</label>
                        <p class="p-card">{{ano}}</p>
                    </div>
                    <div class="conteudo-card">
                        <label class="campo-card" for="sinopse">Sinopse</label>
                        <p class="p-card">{{sinopse}}</p>
                    </div>
                </div>
                {{/each}}
            </div>
        </div>


        <div class="navegacao">
            <div class="container">
                <div class="nav-item">
                    <img class="icon" src="exit.png">
                    <p class="text-small">Cancel</p>
                    <p class="text-large">No commitments</p>
                    <p class="text-large">Cancel online at anytime</p>
                </div>
                <div class="nav-item">
                    <img class="icon" src="responsive.png">
                    <p class="text-large">Watch anywhere</p>
                    <p class="text-small">Devices</p>
                </div>
                <div class="nav-item">
                    <img class="icon" src="price-tag.png">
                    <p class="text-large">Pick your price</p>
                    <p class="text-small">Price</p>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        // FIX
        setInterval(function () {
            let cards = document.getElementById('cards');
            var xmlhttp = new XMLHttpRequest();
            cards.innerHTML = '';
            xmlhttp.open('GET', 'https://projetoweb-netflix.herokuapp.com/busca?nome=', true);
            xmlhttp.onreadystatechange = function () {
                if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {
                    const data = JSON.parse(xmlhttp.responseText);

                    data.map((i) => {
                        //console.log(i.nome, i.ano, i.sinopse);
                        createElementCard(i.nome, i.ano, i.sinopse, i.img)
                    });
                }
                
            };

            xmlhttp.onprogress = function(e) {
                if (e.lengthComputable) {
                    document.getElementById('progress').max = e.total;
                    document.getElementById('progress').value = e.loaded;
                    document.getElementById('display').innerText = Math.floor((e.loaded / e.total) * 100) + '%';
                }
            };

            xmlhttp.onloadstart = function(e) {
                const markup = `
                    <div id="progressBar">
                        <progress id="progress" value="0"></progress>
                        <span id="display"></span>
                    </div>
                `;

                cards.insertAdjacentHTML('beforeend', markup);

                document.getElementById('progress').value = 0;
                document.getElementById('display').innerText = '0%';
            };

            xmlhttp.onloadend = function(e) {
                document.getElementById('progress').value = e.loaded;
                cards.removeChild(document.getElementById('progressBar'));
            };

            xmlhttp.send();
        }, 120000);

        document.querySelector('#busca').addEventListener("keyup", function () {
            var xmlhttp = new XMLHttpRequest();
            let lista = document.getElementById('lista_pesquisa');
            let select = document.getElementById('selector');
            let filtro = select.options[select.selectedIndex].value;
            
            xmlhttp.open('GET', 'https://projetoweb-netflix.herokuapp.com/busca?'+filtro+'=' + busca.value, true);
            xmlhttp.onreadystatechange = function () {
                if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {
                    const data = JSON.parse(xmlhttp.responseText);
                    lista_pesquisa.innerHTML = "";
                    data.map((i) => {
                        var option = document.createElement('option');
                        if(filtro === 'nome')
                            option.value = i.nome;
                        else if(filtro === 'ano')
                            option.value = i.ano;
                        else 
                            option.value = i.sinopse;

                        lista_pesquisa.appendChild(option);
                    });
                }
            };
            xmlhttp.send();
        });



        document.getElementById('form-pesquisa').onsubmit = function (e) {
            e.preventDefault();
            //console.log('clicou no botÃ£o');
            let busca = document.getElementById('busca');
            let cards = document.getElementById('cards');
            let select = document.getElementById('selector');
            let filtro = select.options[select.selectedIndex].value;
            let xmlhttp = new XMLHttpRequest();
            const filme = busca.value;
            cards.innerHTML = "";

            xmlhttp.open('GET', 'https://projetoweb-netflix.herokuapp.com/busca?'+filtro+'=' + filme, true);

            xmlhttp.onreadystatechange = function () {

                if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {
                    const data = JSON.parse(xmlhttp.responseText);

                    data.map((i) => {
                        //console.log(i.nome, i.ano, i.sinopse);
                        createElementCard(i.nome, i.ano, i.sinopse, i.img)
                    });
                }
            };

            xmlhttp.onprogress = function(e) {
                if (e.lengthComputable) {
                    document.getElementById('progress').max = e.total;
                    document.getElementById('progress').value = e.loaded;
                    document.getElementById('display').innerText = Math.floor((e.loaded / e.total) * 100) + '%';
                }
            };

            xmlhttp.onloadstart = function(e) {
                const markup = `
                    <div id="progressBar">
                        <progress id="progress" value="0"></progress>
                        <span id="display"></span>
                    </div>
                `;

                cards.insertAdjacentHTML('beforeend', markup);

                document.getElementById('progress').value = 0;
                document.getElementById('display').innerText = '0%';
            };

            xmlhttp.onloadend = function(e) {
                document.getElementById('progress').value = e.loaded;
                cards.removeChild(document.getElementById('progressBar'));
            };

            xmlhttp.send();
        }


        function createElementCard(nome, ano, sinopse, link) {
            let card = document.createElement("div");
            let img = document.createElement("img");
            let contCardNome = document.createElement("div");
            let contCardAno = document.createElement("div");
            let contCardSinopse = document.createElement("div");
            let labelNome = document.createElement("label");
            let labelAno = document.createElement("label");
            let labelSinopse = document.createElement("label");
            let pNome = document.createElement("p");
            let pAno = document.createElement("p");
            let pSinopse = document.createElement("p");

            card.className = 'card';
            img.className = 'img-card';
            contCardNome.className = 'conteudo-card';
            contCardAno.className = 'conteudo-card';
            contCardSinopse.className = 'conteudo-card';
            labelNome.className = 'campo-card';
            labelAno.className = 'campo-card';
            labelSinopse.className = 'campo-card';
            pNome.className = 'p-card';
            pAno.className = 'p-card';
            pSinopse.className = 'p-card';

            img.setAttribute('src', link);
            labelNome.setAttribute('for', 'nome');
            labelAno.setAttribute('for', 'ano');
            labelSinopse.setAttribute('for', 'sinopse');

            contCardNome.appendChild(labelNome);
            contCardNome.appendChild(pNome);
            contCardAno.appendChild(labelAno);
            contCardAno.appendChild(pAno);
            contCardSinopse.appendChild(labelSinopse);
            contCardSinopse.appendChild(pSinopse);

            card.appendChild(img);
            card.appendChild(contCardNome);
            card.appendChild(contCardAno);
            card.appendChild(contCardSinopse);

            cards.appendChild(card);

            labelNome.innerHTML = "Nome";
            labelAno.innerHTML = "Ano";
            labelSinopse.innerHTML = "Sinopse";
            pNome.innerHTML = nome;
            pAno.innerHTML = ano;
            pSinopse.innerHTML = sinopse;
        }

    </script>
</body>

</html>